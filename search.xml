<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[使用 Github 空间搭建 Hexo 技术博客--安装篇]]></title>
      <url>http://code.andyadc.com/2016/12/11/Hexo-Basic/</url>
      <content type="html"><![CDATA[<h2 id="部署前介绍"><a href="#部署前介绍" class="headerlink" title="部署前介绍"></a>部署前介绍</h2><h3 id="Hexo-是什么"><a href="#Hexo-是什么" class="headerlink" title="Hexo 是什么"></a>Hexo 是什么</h3><ul>
<li>Hexo 的中文官网：<a href="http://hexo.io/zh-cn/" target="_blank" rel="external">http://hexo.io/zh-cn/</a></li>
<li>作者 Tommy Chen：<a href="https://zespia.tw/" target="_blank" rel="external">https://zespia.tw/</a></li>
<li>在我的理解里面：Hexo 是一个基于 Node.js 快速、简洁且高效的博客框架，可以将 Markdown 文件快速的生成静态网页，托管在 GitHub Pages 上。</li>
<li>而官网自己是这样说的：</li>
</ul>
<blockquote>
<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
</blockquote>
<h3 id="适合人群"><a href="#适合人群" class="headerlink" title="适合人群"></a>适合人群</h3><ul>
<li>只想搭建一个技术博客的人（真心别搞太多，你没那么多精力）</li>
</ul>
<h3 id="搭建所需软件"><a href="#搭建所需软件" class="headerlink" title="搭建所需软件"></a>搭建所需软件</h3><ul>
<li>各个软件官网：<ul>
<li>git：<a href="http://git-scm.com/" target="_blank" rel="external">http://git-scm.com/</a></li>
<li>node.js：<a href="http://nodejs.org/" target="_blank" rel="external">http://nodejs.org/</a></li>
</ul>
</li>
</ul>
<h3 id="文章前提"><a href="#文章前提" class="headerlink" title="文章前提"></a>文章前提</h3><ul>
<li>如果你对上面要求的软件一个都不了解的话，建议你先看如下内容（只是让你们先了解下，当时别照着文章内容做）：<ul>
<li><a href="http://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="external">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></li>
<li><a href="http://www.jianshu.com/p/858ecf233db9" target="_blank" rel="external">通过Hexo在Github上搭建博客教程</a></li>
<li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="external">hexo你的博客</a></li>
<li><a href="http://www.jianshu.com/p/701b1095da11" target="_blank" rel="external">手把手教你建github技术博客</a></li>
<li><a href="http://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="external">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></li>
<li><a href="http://www.jianshu.com/p/e858a90d0a17" target="_blank" rel="external">windows下搭建hexo博客并将其部署到GitCafe终极教程</a></li>
<li><a href="http://www.jianshu.com/p/db7e64d86067" target="_blank" rel="external">使用Hexo搭建博客（三），博客配置、主题和写作</a></li>
<li><a href="http://www.jianshu.com/p/e7413116e9d4" target="_blank" rel="external">Hexo搭建WiKi</a></li>
<li><a href="https://www.zhihu.com/question/28058973" target="_blank" rel="external">怎么用hexo上传一个README.md到github?</a></li>
</ul>
</li>
</ul>
<h3 id="域名绑定"><a href="#域名绑定" class="headerlink" title="域名绑定"></a>域名绑定</h3><ul>
<li>如果你一开始就打算要绑定域名，则下面教程中所有可以填写域名的地方你都填写上你要绑定的域名，如果你没独立域名，那就使用 Github 默认给你的：username.github.io 域名即可。</li>
</ul>
<hr>
<h2 id="部署开始"><a href="#部署开始" class="headerlink" title="部署开始"></a>部署开始</h2><h3 id="git-安装"><a href="#git-安装" class="headerlink" title="git 安装"></a>git 安装</h3><ul>
<li>双击运行 <strong>Git-2.9.9.1-64-bit.exe</strong>，接下来一律下一步，不需要多余的选择，假设你安装的目录位置跟我一样：C:\Program Files\Git</li>
<li>打开 Git Bash（路径：C:\Program Files\Git\git-bash.exe），输入：<code>git --version</code><ul>
<li>如下图，如果出现：<strong>git version 2.9.3.windows.1</strong>，这表示安装成功</li>
<li><img src="http://andyadc-image.oss-cn-shanghai.aliyuncs.com/blog-hexo-image/check-git-version.png" alt="验证 git 安装"></li>
</ul>
</li>
</ul>
<h3 id="Node-js-安装"><a href="#Node-js-安装" class="headerlink" title="Node.js 安装"></a>Node.js 安装</h3><ul>
<li>双击运行 <strong>node-v6.6.0-x64.msi</strong>，接下来一律下一步，不需要多余的选择。</li>
<li>安装完之后，打开 Git Bash，输入：<code>npm -v</code><ul>
<li>如下图，如果出现：<strong>3.10.3</strong>，则表示 Node.js 安装成功。如果你没有显示这个信息，我怀疑你需要重启电脑试试看，因为我在给我弟讲解这一步的时候发现有这个问题。</li>
<li><img src="http://andyadc-image.oss-cn-shanghai.aliyuncs.com/blog-hexo-image/check-node-npm-version.png" alt="验证 node.js 安装"></li>
</ul>
</li>
</ul>
<h3 id="Node-js-源设置"><a href="#Node-js-源设置" class="headerlink" title="Node.js 源设置"></a>Node.js 源设置</h3><ul>
<li>在安装 Hexo 之前，先说一下 Node.js 的源，Node.js 官方源默认是：<a href="http://registry.npmjs.org" target="_blank" rel="external">http://registry.npmjs.org</a>，但是由于在国外，说不定你使用的时候就抽风无法下载任何软件。所以我们决定暂时使用淘宝提供的源，淘宝源官网：<a href="http://npm.taobao.org/" target="_blank" rel="external">http://npm.taobao.org/</a></li>
<li>在 Git Bash 中我们执行下面这一句（这是一整句的）：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">alias</span> cnpm=<span class="string">"npm --registry=https://registry.npm.taobao.org \</span></div><div class="line">--cache=<span class="variable">$HOME</span>/.npm/.cache/cnpm \</div><div class="line">--disturl=https://npm.taobao.org/dist \</div><div class="line">--userconfig=<span class="variable">$HOME</span>/.cnpmrc"</div></pre></td></tr></table></figure>
<ul>
<li>现在验证下是否可以使用淘宝的 cnpm 命令：<code>cnpm info express</code><ul>
<li>如果能输出一大堆介绍，则说明成功了，以后每次要使用淘宝的源都需要这样来。现在除了默认的 <strong>npm</strong>，还多了一个 <strong>cnpm</strong> 可以使用，我们下面有关安装的讲解内容也都是基于此临时命令。</li>
<li>如果输出：bash: cnpm: command not found，则表示没成功，需要你在排查下</li>
</ul>
</li>
</ul>
<h3 id="安装-Hexo-框架"><a href="#安装-Hexo-框架" class="headerlink" title="安装 Hexo 框架"></a>安装 Hexo 框架</h3><ul>
<li>安装 Hexo（注意，现在是 cnpm 开头了，不是 npm 了）：<code>cnpm install -g hexo-cli</code><ul>
<li>安装时间不一定很快，有可能需要等 3 ~ 5 分钟。</li>
<li>安装完有 WARN 警告也没关系的。</li>
</ul>
</li>
</ul>
<h3 id="创建-Hexo-项目"><a href="#创建-Hexo-项目" class="headerlink" title="创建 Hexo 项目"></a>创建 Hexo 项目</h3><ul>
<li>现在假设我要创建一个名为 hexo 的项目，项目目录就放在：D:\Workspace\blog 目录下，所以我们在 D:\Workspace\blog 目录下创建一个 hexo 目录。现在这个项目的全路径是：D:\Workspace\blog\hexo</li>
<li>打开 Git Bash：<ul>
<li>进入该目录：<code>cd D:/Workspace/blog/hexo</code></li>
<li>然后执行：<code>hexo init</code>，这个时间也会比较长，也有可能要等几分钟，有显示 WARN 也不用管</li>
<li>最后执行：<code>cnpm install</code>，有显示 WARN 也不用管</li>
<li>安装完成之后，D:\Workspace\blog\hexo 目录结构是这样的：<ul>
<li><img src="http://andyadc-image.oss-cn-shanghai.aliyuncs.com/blog-hexo-image/hexo-init-file-catalog.png" alt="安装 hexo 后的目录结构"></li>
</ul>
</li>
<li>现在我们启动 hexo 本地服务，看下默认的博客是怎样的，命令：<code>hexo server</code></li>
<li>现在用浏览器访问：<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a>，效果如下图<ul>
<li><img src="http://andyadc-image.oss-cn-shanghai.aliyuncs.com/blog-hexo-image/hexo-default-theme-home-page.png" alt="默认模板效果"></li>
</ul>
</li>
<li>如果要停止 hexo 服务：在 Git Bash 下按 <code>Ctrl + C</code> 即可</li>
</ul>
</li>
</ul>
<h3 id="选用其他主题"><a href="#选用其他主题" class="headerlink" title="选用其他主题"></a>选用其他主题</h3><ul>
<li>由于默认主题太大众了，所以现在我们换个主题。</li>
<li>你可以去这里找主题：<ul>
<li>hexo-theme：<a href="https://hexo.io/themes/" target="_blank" rel="external">https://hexo.io/themes/</a></li>
<li>hexo-github-theme-list：<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">https://github.com/hexojs/hexo/wiki/Themes</a></li>
<li>有那些好看的hexo主题？：<a href="http://www.zhihu.com/question/24422335" target="_blank" rel="external">http://www.zhihu.com/question/24422335</a></li>
</ul>
</li>
<li>我这里选择的 <strong>yelee</strong>：<a href="https://github.com/MOxFIVE/hexo-theme-yelee" target="_blank" rel="external">https://github.com/MOxFIVE/hexo-theme-yelee</a><ul>
<li>原因是能最大化衬托出：目录、文章内容、代码块。因为我对这个博客的定位就是用来放技术类内容，所以不会让它太杂或是太花。只是目前这个颜色偏浅，后续还需要调整。</li>
</ul>
</li>
<li>现在假设你跟我要用的模板是一样：<ul>
<li>还是让 Git Bash 保持在 D:\Workspace\blog\hexo 目录下，然后输入命令：<code>git clone https://github.com/MOxFIVE/hexo-theme-yelee.git themes/yelee</code></li>
<li>这样就在 D:\Workspace\blog\hexo\themes 目录下生成了一个 yelle 文件夹，里面有我们刚刚 clone 下来的主题内容。</li>
<li>如果以后你不自己修改这个主题的话，可以考虑经常更新下作者的更新内容：<ul>
<li><code>cd D:/Workspace/blog/hexo/themes/yelee</code></li>
<li><code>git pull origin master</code></li>
</ul>
</li>
</ul>
</li>
<li>下载好主题文件之后，我们现在要修改 D:\Workspace\blog\hexo 目录下的项目配置文件：<strong>_config.yml</strong>，把对应的主题目录名改下，编辑如下图。<ul>
<li><img src="http://andyadc-image.oss-cn-shanghai.aliyuncs.com/blog-hexo-image/hexo-modify-theme.png" alt="修改主题目录"></li>
</ul>
</li>
<li>更改主题目录名后，我们还要重新生成主题静态内容：<ul>
<li>继续在 Git Bash 中输入命令：<ul>
<li>重新生成静态博客的所有内容：<code>hexo generate</code></li>
<li>重启 hexo 本地服务：<code>hexo server</code></li>
<li>重新访问：<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a>，效果如下图</li>
<li><img src="http://andyadc-image.oss-cn-shanghai.aliyuncs.com/blog-hexo-image/hexo-yalee-theme-home-page.png" alt="新主题效果"></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="创建-Github-pages-并-SSH-授权"><a href="#创建-Github-pages-并-SSH-授权" class="headerlink" title="创建 Github pages 并 SSH 授权"></a>创建 Github pages 并 SSH 授权</h3><ul>
<li>现在假设你已经有一个 Gtihub 账号，你还需要一个特别的仓库，特别在仓库名就是你的 Github 账号登录名，比如我的用户名是：andyadc，那我要创建的仓库名字完整滴填写是：andyadc.github.io，具体效果如下图。<ul>
<li><img src="http://andyadc-image.oss-cn-shanghai.aliyuncs.com/blog-hexo-image/create-gitpages-repository.png" alt="创建 github pages"></li>
</ul>
</li>
<li>创建好仓库之后，要本地生成 SSH 秘钥，方便电脑上的 git 软件好提交内容到 Github 上<ul>
<li>在 Git Bash 中，输入：<code>ssh-keygen -t rsa -C &quot;你的邮箱地址&quot;</code>，然后回车，回车，再回车，一共 3 次回车，具体含义自己 Google。</li>
<li>比如我的：<code>ssh-keygen -t rsa -C &quot;andaicheng@gmail.com&quot;</code>，生成后效果如下图：</li>
<li><img src="http://andyadc-image.oss-cn-shanghai.aliyuncs.com/blog-hexo-image/ssh-keygen.png" alt="生成 ssh 密钥"></li>
<li>此时，生成密钥后，在你电脑目录：C:\Users\你的计算机用户名\.ssh 下，会生成两个文件：<ul>
<li>私钥：<strong>id_rsa</strong></li>
<li>公钥：<strong>id_rsa.pub</strong></li>
<li>如果生成的不是这样的文件，那删除掉这两个生成的，重新执行上面的命令，让它再一次生成。</li>
</ul>
</li>
<li>现在用记事本打开 id_rsa.pub，复制文件中的所有内容。<ul>
<li>访问：<a href="https://github.com/settings/ssh" target="_blank" rel="external">https://github.com/settings/ssh</a>，添加新秘钥，效果如下图<ul>
<li>Title：自己随便取</li>
<li>Key：把刚刚复制的都粘贴进来</li>
<li><img src="http://andyadc-image.oss-cn-shanghai.aliyuncs.com/blog-hexo-image/github-add-ssh-keys.png" alt="添加密钥"></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="把本地的博客内容同步到-Github-上"><a href="#把本地的博客内容同步到-Github-上" class="headerlink" title="把本地的博客内容同步到 Github 上"></a>把本地的博客内容同步到 Github 上</h3><ul>
<li>要把本地的静态博客同步到 Github，我们还需要先安装两个跟部署相关的 hexo 插件：<ul>
<li>继续在 Git Bash 中输入：</li>
<li><code>cnpm install hexo -server --save</code></li>
<li><code>cnpm install hexo-deployer-git --save</code></li>
</ul>
</li>
<li>编辑全局 hexo 的配置文件：<strong>_config.yml</strong><ul>
<li>官网对此配置的介绍：<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="external">https://hexo.io/zh-cn/docs/configuration.html</a></li>
<li>我自己的编辑内容初稿（你需要认真看的是含有中文注释的内容）：</li>
</ul>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Hexo Configuration</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></div><div class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></div><div class="line"></div><div class="line"><span class="comment"># Site，这一块区域主要是设置博客的主要说明，需要注意的是：每个冒号后面都是有一个空格，然后再书写自己的内容的</span></div><div class="line">title: Andy Code</div><div class="line">subtitle: Andy<span class="string">'s Blog</span></div><div class="line">description: xxxx</div><div class="line">author: Andy An</div><div class="line">email: andaicheng@gmail.com</div><div class="line">language: zh-CN</div><div class="line">timezone:</div><div class="line"></div><div class="line"># URL，这一块一般可以设置的是 url 这个参数，比如我要设置绑定域名的，这里就需要填写我的域名信息</div><div class="line">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child<span class="string">' and root as '</span>/child/<span class="string">'</span></div><div class="line">url: http://blog.andyadc.com</div><div class="line">root: /</div><div class="line">permalink: :year/:month/:day/:title/</div><div class="line">permalink_defaults:</div><div class="line"></div><div class="line"># Directory</div><div class="line">source_dir: source</div><div class="line">public_dir: public</div><div class="line">tag_dir: tags</div><div class="line">archive_dir: archives</div><div class="line">category_dir: categories</div><div class="line">code_dir: downloads/code</div><div class="line">i18n_dir: :lang</div><div class="line">skip_render:</div><div class="line"></div><div class="line"># Writing</div><div class="line">new_post_name: :title.md # File name of new posts</div><div class="line">default_layout: post</div><div class="line">titlecase: false # Transform title into titlecase</div><div class="line">external_link: true # Open external links in new tab</div><div class="line">filename_case: 0</div><div class="line">render_drafts: false</div><div class="line">post_asset_folder: false</div><div class="line">relative_link: false</div><div class="line">future: true</div><div class="line">highlight:</div><div class="line">  enable: true</div><div class="line">  line_number: true</div><div class="line">  auto_detect: false</div><div class="line">  tab_replace:</div><div class="line"></div><div class="line"># Category &amp; Tag</div><div class="line">default_category: uncategorized</div><div class="line">category_map:</div><div class="line">tag_map:</div><div class="line"></div><div class="line"># Date / Time format</div><div class="line">## Hexo uses Moment.js to parse and display date</div><div class="line">## You can customize the date format as defined in</div><div class="line">## http://momentjs.com/docs/#/displaying/format/</div><div class="line">date_format: YYYY-MM-DD</div><div class="line">time_format: HH:mm:ss</div><div class="line"></div><div class="line"># Pagination</div><div class="line">## Set per_page to 0 to disable pagination</div><div class="line">per_page: 10</div><div class="line">pagination_dir: page</div><div class="line"></div><div class="line"># Extensions</div><div class="line">## Plugins: https://hexo.io/plugins/</div><div class="line">## Themes: https://hexo.io/themes/</div><div class="line">theme: yelee</div><div class="line"></div><div class="line"># Deployment</div><div class="line">## 这里是重点，这里是修改发布地址，因为我们前面已经加了 SSH 密钥信息在 Github 设置里面了，所以只要我们电脑里面持有那两个密钥文件就可以无需密码地跟 Github 做同步。</div><div class="line">## 需要注意的是这里的 repo 采用的是 ssh 的地址，而不是 https 的。分支我们默认采用 master 分支，以后你翅膀硬了要换其他也无所谓。</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: git@github.com:andyadc/andyadc.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<ul>
<li>编辑全局配置后我们需要重新部署：<ul>
<li>继续在 Git Bash 中输入命令：</li>
<li>先清除掉已经生成的旧文件：<code>hexo clean</code></li>
<li>再生成一次静态文件：<code>hexo generate</code></li>
<li>在本地预览下：<code>hexo server</code></li>
<li>本地没问题之后，Ctrl + C 停掉本地预览。</li>
<li>在部署到 Github 之前，需要先确定你是否已经用过 Git，如果你没用过，则此时你需要做如下设置，在 Git Bash 中依次输入下面两个命令：<ul>
<li><code>git config --global user.email &quot;你的 Github 注册邮箱地址&quot;</code></li>
<li><code>git config --global user.name &quot;你的 Github 用户名&quot;</code></li>
</ul>
</li>
<li>使用部署命令部署到 Github 上：<code>hexo deploy</code>，有弹出下面提示框，请输入：<code>yes</code><ul>
<li><img src="http://andyadc-image.oss-cn-shanghai.aliyuncs.com/blog-hexo-image/hexo-git-deploy-confirm.png" alt="确认提交"></li>
</ul>
</li>
<li>提交成功效果如下：<ul>
<li><img src="http://andyadc-image.oss-cn-shanghai.aliyuncs.com/blog-hexo-image/hexo-git-deploy.png" alt="提交成功"></li>
</ul>
</li>
<li>访问服务器地址进行检查：<a href="http://andyadc.github.io" target="_blank" rel="external">http://andyadc.github.io</a>，效果如下<ul>
<li><img src="http://andyadc-image.oss-cn-shanghai.aliyuncs.com/blog-hexo-image/hexo-server-preview.png" alt="服务器效果"></li>
</ul>
</li>
<li>但是，也不排除你 deploy 不了到 Github，报这个错误：<code>Host key verification failed</code>，那解决办法如下：<ul>
<li>还是在 Git Bash 界面中，输入如下命令：<code>ssh -T git@github.com</code>，根据界面提示，输入：<code>yes</code> 回车。之后你可以再试一下是否可以 deploy。</li>
</ul>
</li>
</ul>
</li>
<li>通过上面几次流程我们也就可以总结：以后，每次发表新文章要部署都按这样的流程来：<ul>
<li><code>hexo clean</code></li>
<li><code>hexo generate</code></li>
<li><code>hexo deploy</code></li>
</ul>
</li>
<li>也因为这几个命令太频繁了，所以又有了精简版的命令：<ul>
<li><code>hexo clean == hexo clean</code></li>
<li><code>hexo g == hexo generate</code></li>
<li><code>hexo s == hexo server</code></li>
<li><code>hexo d == hexo deploy</code></li>
</ul>
</li>
</ul>
<h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><ul>
<li>绑定域名不排除会遇到很多网络问题或是七七八八，所以这里先提供先官网的一些说明：<ul>
<li><a href="https://help.github.com/articles/setting-up-your-pages-site-repository/" target="_blank" rel="external">https://help.github.com/articles/setting-up-your-pages-site-repository/</a></li>
<li><a href="https://help.github.com/articles/quick-start-setting-up-a-custom-domain/" target="_blank" rel="external">https://help.github.com/articles/quick-start-setting-up-a-custom-domain/</a></li>
<li><a href="https://help.github.com/articles/setting-up-an-apex-domain/" target="_blank" rel="external">https://help.github.com/articles/setting-up-an-apex-domain/</a></li>
<li><a href="https://help.github.com/articles/troubleshooting-custom-domains/" target="_blank" rel="external">https://help.github.com/articles/troubleshooting-custom-domains/</a></li>
<li><a href="https://help.github.com/articles/custom-domain-redirects-for-github-pages-sites/" target="_blank" rel="external">https://help.github.com/articles/custom-domain-redirects-for-github-pages-sites/</a></li>
</ul>
</li>
<li>首先我们要一个 CNAME 文件（文件名叫 CNAME，没有文件后缀的），把该文件放在 D:\Workspace\blog\hexo\source 目录下，以后一些需要放在根目录的资源文件都可以放这里。如果你找不到这样的文件可以到我的项目上下载：<a href="https://github.com/andyadc/andyadc.github.io" target="_blank" rel="external">https://github.com/andyadc/andyadc.github.io</a><ul>
<li>CNAME 上的内容需要写你具体要绑定的域名信息，比如我是：<strong>blog.andyadc.com</strong>，具体你可以参考下图：<ul>
<li><img src="http://andyadc-image.oss-cn-shanghai.aliyuncs.com/blog-hexo-image/add-cname.png" alt="设置 CNAME 文件"></li>
</ul>
</li>
</ul>
</li>
<li><p>接着我们需要到 阿里云 上设置域名解析</p>
<ul>
<li><img src="http://andyadc-image.oss-cn-shanghai.aliyuncs.com/blog-hexo-image/github-pages-domain-resolution.png" alt="设置域名解析"></li>
</ul>
</li>
<li><p>设置好之后，等过几分钟域名解析好之后，我们访问：<a href="http://blog.andyadc.com" target="_blank" rel="external">http://blog.andyadc.com</a>，效果如下：    </p>
<ul>
<li><img src="http://andyadc-image.oss-cn-shanghai.aliyuncs.com/blog-hexo-image/domain-resolution-success.png" alt="域名访问效果"></li>
<li>Github 提示，建议我们使用 CNAME 方式来指向，别用 IP，所以建议你这样配置，还是以我的为例：<ul>
<li>主机记录：blog</li>
<li>记录类型：CNAME</li>
<li>记录值：andyadc.github.io.（后面的这个点别忘记了）</li>
<li>还有，要记得把 CNAME 那个文件再 deploy 到 Github 哦，不然还是访问不了的。</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="Hexo-新文章内容的开头"><a href="#Hexo-新文章内容的开头" class="headerlink" title="Hexo 新文章内容的开头"></a>Hexo 新文章内容的开头</h3><ul>
<li>hexo 新文章内容的开头需要这样定义：<ul>
<li>categories：表示文章所属分类</li>
<li>tags：表示文章所属标签</li>
</ul>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: 这是文章标题</div><div class="line">date: 2016-12-11 17:58:27</div><div class="line">categories: [Hexo,IntelliJ IDEA]</div><div class="line">tags: [Hexo,IntelliJ IDEA,Git,Github,Node.js]</div><div class="line">---</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://code.andyadc.com/2016/12/10/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    </entry>
    
  
  
</search>
